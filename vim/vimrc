set nocompatible
filetype off

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                            vim-plug configuration
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Set the runtime path to include Vundle and initialize
call plug#begin()
" Add plugins here

Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/nerdcommenter'
"Plug 'scrooloose/syntastic'
Plug 'dense-analysis/ale'
"Plug 'airblade/vim-gitgutter'
Plug 'mhinz/vim-signify'
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'mattn/emmet-vim'
Plug 'honza/vim-snippets'
Plug 'sirver/ultisnips'
Plug 'majutsushi/tagbar'
Plug 'junegunn/fzf',{ 'do':{ ->fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'ycm-core/YouCompleteMe'
Plug 'mileszs/ack.vim'
Plug 'godlygeek/tabular'

Plug 'tomasr/molokai'
Plug 'altercation/vim-colors-solarized'

call plug#end()

filetype plugin indent on

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                 Extra 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let extra_path = $HOME . "/extra/extra.vim"


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                  Settings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"DISPLAY SETTINGS
syntax on " syntax highlight 
colorscheme solarized
"colorscheme molokai
set t_Co=256
let g:solarized_termcolors=256

set background=dark 
set number " show line number
set laststatus=2 "always show status line
set showcmd
set ruler
set cursorline
set wildmenu
set wildmode=longest,list,full
set completeopt-=preview

"EDITOR SETTINGS
set autoindent " keep indent on new line
set cindent " smart indent for c-like code 
set backspace=indent,eol,start " allow backspacing over anything in insert mode
set nobackup " now backup files

set smarttab " 
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab " use spaces instead of tab
set shiftround

set nohlsearch " no highlight search result
set ignorecase " ignore case in search patterns
set smartcase " become sensitive when you type uppercase characters
set incsearch " hight the string what i typed

set encoding=utf-8
set fileformat=unix
set fileformats=unix,dos,mac

set history=1000
set undolevels=1000
set autoread
set mouse=a

set foldlevelstart=99

set tags=./tags;/

"reset the vimrc augroup
augroup vimrc 
au! vimrc
augroup end

"load some config files and snippets here
set rtp+=~/dotfiles/vim

" Auto source .vimrc after the file write
autocmd vimrc BufWritePost .vimrc source $MYVIMRC
"Set HTML indent
autocmd vimrc BufNewFile,BufRead *.blade.php setlocal filetype=html
autocmd vimrc FileType  html setlocal tabstop=2|setlocal shiftwidth=2|setlocal softtabstop=2

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                               Custom mapping
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader=" "
let maplocalleader="+"

nnoremap j gj
nnoremap k gk
nnoremap n nzz

nnoremap N Nzz

inoremap jk <esc>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                               solarized
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if g:colors_name == "solarized"
    highlight clear SignColumn
    highlight GitGutterAdd ctermfg=green
    highlight GitGutterChange ctermfg=yellow
    highlight GitGutterDelete ctermfg=red
    highlight GitGutterChangeDelete ctermfg=yellow
endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                    FZF
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <leader><leader> :Files<cr>
nnoremap <leader>fh :History<cr>
nnoremap <leader>f: :History :<cr>
nnoremap <leader>f/ :History /<cr>
nnoremap <leader>tf :Tags<cr>
nnoremap <leader>FF :let @"=substitute(expand('<cword>'),'\\','/','g')<cr>:FZF -q <C-R>"<cr>
nnoremap <leader>fc :Ag<cr>

vnoremap <leader><leader> y:FZF -q <C-R>"<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                             Vim-indent-guides
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
hi IndentGuidesOdd  ctermbg=235
hi IndentGuidesEven ctermbg=237
let g:indent_guides_auto_colors=0
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1
let g:indent_guides_enable_on_vim_startup=1

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                   NERDTree 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <leader>ft :NERDTreeToggle<cr>
nnoremap <leader>ff :NERDTreeFind %<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                   UltiSnips 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:UltiSnipsExpandTrigger="<tab>"


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                   YCM 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"let g:ycm_autoclose_preview_window_after_completion=1
"let g:ycm_min_num_identifier_candidate_chars=1
"let g:ycm_min_num_of_chars_for_completion=1
let g:ycm_key_list_select_completion=['<Down>']
let g:ycm_key_list_previous_completion=['<Up>']
"let g:ycm_cache_omnifunc=1

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                   Tagbar 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:tagbar_autofocus=1
nnoremap <leader>b :TagbarToggle<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                   VIMRC OVERRIDE
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if filereadable(extra_path)
    exec 'source ' . extra_path
endif
